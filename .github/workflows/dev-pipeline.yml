name: Simple Flask Server Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      IMAGE_TAG: ${{ steps.short-sha.outputs.IMAGE_TAG }}
    steps:

      - name: Code Checkout
        uses: actions/checkout@v4
      
      - name: Set short git commit SHA
        id: short-sha
        run: |
          commitSHA=$(git rev-parse --short ${{ github.sha }})
          echo "IMAGE_TAG = $commitSHA" >> "$GITHUB_OUTPUT"
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-southeast-1
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push docker image to Amazon ECR
        id: docker-image
        env:
          REGISTRY: ${{steps.login-ecr.outputs.registry }}
          REPOSITORY: simple-flask
          IMAGE_TAG: ${{ steps.short-sha.outputs.IMAGE_TAG }}
        run : |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . 
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  pull-image-deploy:
    needs: [build-push]
    runs-on: ubuntu-latest
    env:
        REGISTRY: ${{ needs.build-push.outputs.REGISTRY }}
        REPOSITORY: simple-flask
        IMAGE_TAG: ${{ needs.build-push.outputs.IMAGE_TAG }}
    steps:

      - name: Deploy to webserver
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.WEBSERVER_HOST }}
          username: ${{ secrets.WEBSERVER_USERNAME }}
          key: ${{ secrets.WEBSERVER_KEY }}
          port: ${{ secrets.WEBSERVER_PORT }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          proxy_port: ${{ secrets.PROXY_PORT }}
          script: |
            sudo docker stop simple-flask
            sudo docker rm simple-flask
            sudo docker rmi -f $(sudo docker images -aq)
            aws ecr get-login-password --region ap-southeast-1 | sudo docker login --username AWS --password-stdin ${{ env.REGISTRY }}
            sudo docker pull ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
            sudo docker run -d -p 80:5000 --name=${{ env.REPOSITORY }} ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
            