name: Simple Flask Server Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Code Checkout
        uses: actions/checkout@v4
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }
          aws-region: ap-southeast-1
      
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push docker image to Amazon ECR
        env:
          REGISTRY: ${{steps.login-ecr.outputs.registry }}
          REPOSITORY: simple-flask
          IMAGE_TAG: ${{ github.sha }}
        run : |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . 
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Deploy to webserver
        uses: appleboy/ssh-action@latest
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          proxy_port: ${{ secrets.PROXY_PORT }}
          script: |
            docker stop simple-flask
            docker rm simple-flask
            docker rmi simple-flask
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACC_ID }}.dkr.ecr.ap-southeast-1.amazon.com
            docker pull ${{ secrets.AWS_ACC_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/simple-flask:${{ github.sha }}
            